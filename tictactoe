'''
Assignment: W02 Prove Tic-Tac-Toe
Author: Emma Lund
'''
def play():
    game = [
        [1,2,3],[4,5,6],[7,8,9]
    ]
    players = start()
    count = 1
    while is_game_notover(game):
        make_board(game)
        if count % 2 != 0:
            game = player_turn(game,players[0])
        else: 
            game = player_turn(game,players[1])
        count += 1
    print("Thanks for playing!")

def is_game_notover(game):
     # horizontal
    for row in range(3):
        if game[row][0] == game[row][1] == game[row][2]:
            make_board(game)
            print(f"{game[row][0]} won!")
            return False
    # vertical
    for i in range(3):
        if game[0][i] == game[1][i] == game[2][i]:
            make_board(game)
            print(f"{game[0][i]} won!")
            return False
    # diagonal
    if game[0][0] == game[1][1]  == game[2][2]:
        make_board(game)
        print(f"{game[0][0]} won!")
        return False
    if game[2][0] == game[1][1] == game[0][2]:
        make_board(game)
        print(f"{game[2][0]} won!")
        return False
    #full
    if game[0][0] == game[0][1] == game[0][2]:
        make_board(game)
        print(f"{game[0][0]} won!")
        return False
    if isinstance(game[0][0],str) and isinstance(game[1][1],str) and isinstance(game[2][2],str) \
    and isinstance(game[0][1],str) and isinstance(game[0][2],str) and isinstance(game[1][0],str) \
    and isinstance(game[1][2],str) and isinstance(game[2][0],str) and isinstance(game[2][1],str):
        make_board(game)
        print("Draw! Board is full")
        return False
    #Keep playing
    return True
        
def start():
    print("Welcome to the game of Tic-Tac-Toe!")
    player_one = input("What is the symbol/character for player one? ")
    player_two = input("What is the symbol/character for player two? ")
    players = [player_one,player_two]
    print("OK! Let's start...")
    return players

def player_turn(game,symbol):
    place = int(input(f"{symbol}'s turn to choose a square (1-9): "))
    for row in range(3):
        for col in range(3):
            if game[row][col] == place:
                game[row][col] = symbol
                return game
    print("Oh no! It looks like this spot is full... enter another number please!")
    return player_turn(game,symbol)

def make_board(game):
    for row in game:
        print(f"{row[0]}|{row[1]}|{row[2]}")
        print('-+-+-')

def main():
    play()

if __name__ == "__main__":
    main()